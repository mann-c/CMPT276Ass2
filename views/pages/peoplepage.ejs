<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
</head>

<body>

<div class="container">

<main>
    <h4 id="person" style="display: none;"></h4>
    <a href="./main" style=" border: solid 2pt palevioletred; border-collapse: collapse; border-radius: 20%;
        padding-top: 5px; padding-right: 10px; padding-bottom: 5px; padding-left: 10px; text-align: center;">Back to homepage</a><br>
    <% rows.forEach(function(r) {
        height = r.height;
        width = r.size-r.height;
        if(width<50)
            width = 50;
        %>
        <svg id="<%=r.id%>" name="block" height="<%=height%>" width="<%=width%>"
            style="border: solid 4pt; border-collapse: collapse; fill-opacity: 1;">
            <text x='0' y='15' fill='black'><%=r.name%></text>
        </svg>
        <span class="<%=r.id%>" style="display: none;">{"id":<%=r.id%>, "name":<%=r.name%>, "size":<%=r.size%>, 
            "height":<%=r.height%>, "type":<%=r.type%>, "age":<%=r.age%>, "married":<%=r.married%>}</span>
    <%}); %>
    <div style="text-align: center;">
        Type M means male, and males are represented by boxes that have green backgrounds. <br>
        Type F mean female, and females are represented by boxes that have pink backgrounds. <br> <br>
        Two extra features were added to this application: <br>
        1. The boxes representing each person in the relation are less opaque for older people, <br>
        more opaque for younger people. <br>
        2. The border around each box represents whether the person is married or not. <br>
        If the person is married then the border is red, otherwise the border is blue. <br> <br>
        When a box is clicked all of the attributes are printed at the top of the page
    </div>
</main>


</div>

<script>
    // initialize all of the blocks in the game to listen for clicks
    var blocks = document.getElementsByName("block");

    // change  the background colour
    for(var i=0; i<blocks.length; i++) {

        var element = document.getElementsByClassName(blocks[i].id);

        if (element[0].innerHTML.substring(element[0].innerHTML.indexOf('type')).indexOf('F')>0 && 
            element[0].innerHTML.substring(element[0].innerHTML.indexOf('type')).indexOf('F')<7)
            document.getElementById(blocks[i].id).style.backgroundColor = "pink";
        else
            document.getElementById(blocks[i].id).style.backgroundColor = "springgreen";

        if (element[0].innerHTML.substring(element[0].innerHTML.indexOf('married')).indexOf('true')>0 && 
            element[0].innerHTML.substring(element[0].innerHTML.indexOf('married')).indexOf('true')<10)
            document.getElementById(blocks[i].id).style.borderColor = "red";
        else
            document.getElementById(blocks[i].id).style.borderColor = "mediumslateblue";

        var age = element[0].innerHTML.substring(element[0].innerHTML.indexOf('age')+5,(element[0].innerHTML.indexOf('age')+7));
        var intAge = parseInt(age);
        document.getElementById(blocks[i].id).style.opacity = (100-age+20)/100;
    }

    // show the attributes of the block that is clicked
    for(var block in blocks) {
        blocks[block].onclick = function(evt){
            
            // extract the id of the block that was clicked
            var id = evt.srcElement.id.toString();

            // get element that has the class name with the same id of the block that was clicked
            var span = document.getElementsByClassName(id);
            document.getElementById("person").innerHTML = span[0].innerHTML;
            document.getElementById("person").style.display = 'block';
    };
}
</script>
</body>
</html>